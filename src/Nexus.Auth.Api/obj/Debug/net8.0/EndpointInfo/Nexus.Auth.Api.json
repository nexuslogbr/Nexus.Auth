{
  "openapi": "3.0.1",
  "info": {
    "title": "Nexus.Auth.Api",
    "description": "Endpoint to web interfaces",
    "version": "v1"
  },
  "paths": {
    "/api/v1/Auth/Register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Endpoint to create new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to login of user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResultGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/Logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to logout of user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/RequestPasswordReset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to request reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Auth/ResetPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResultGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResultGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResultGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Menu/GetAll": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Endpoint to get all menus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MenuParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Menu/GetById": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Endpoint to get menus by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Menu/GetByName": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Endpoint to get menus by name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Menu/Post": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Endpoint to create new menus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MenuDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Menu/Put": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Endpoint to change an menus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuPutDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuPutDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MenuPutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Menu/Delete": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Endpoint to remove an menus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/GetAll": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/GetById": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/GetByIds": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/GetByName": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/Post": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/Put": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacePutDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacePutDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacePutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/Delete": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Place/ChangeStatus": {
      "post": {
        "tags": [
          "Place"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/Role/GetAll": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to get all roles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PageParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PageParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelPageListGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelPageListGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelPageListGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Role/GetById": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to get roles by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Role/GetByName": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to get roles by name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Role/Post": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to create new roles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Role/Put": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to change an roles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Role/Delete": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to remove an roles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Role/ChangeStatus": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Endpoint to change the status for role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/GetAll": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to get all users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PageParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PageParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserModelPageListGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserModelPageListGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserModelPageListGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/GetById": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to get user by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/GetByName": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to get user by name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetByName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/Post": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to create new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/Put": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to change an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPutDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPutDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/PutPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to update password of user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/Delete": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to remove an user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetById"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/ChangeStatus": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to change the status for user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectGenericCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/ChangePlace": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint to change location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPlaceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPlaceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPlaceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserPlaceModelGenericCommandResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPlaceModelGenericCommandResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPlaceModelGenericCommandResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResult"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResult"
            },
            "nullable": true
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuResult"
            },
            "nullable": true
          },
          "places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthResultGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/AuthResult"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "ChangeStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "blocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GenericCommandResultDetail": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllUserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceResult"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          },
          "blocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAllUserModelPageList": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllUserModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllUserModelPageListGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/GetAllUserModelPageList"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "GetById": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetByName": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentityResult": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean",
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityError"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IdentityResultGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/IdentityResult"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "MenuDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/MenuTypeEnum"
          },
          "menuSectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MenuModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "boolean"
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "menuSectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/MenuTypeEnum"
          },
          "registerDate": {
            "type": "string",
            "nullable": true
          },
          "changeDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MenuParams": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "term": {
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "nullable": true
          },
          "orderByProperty": {
            "type": "string",
            "nullable": true
          },
          "asc": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MenuPutDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/MenuTypeEnum"
          },
          "menuSectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MenuResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "boolean"
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "menuSectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/MenuTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "MenuTypeEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ObjectGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "PageParams": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "term": {
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "nullable": true
          },
          "orderByProperty": {
            "type": "string",
            "nullable": true
          },
          "asc": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PlaceDto": {
        "required": [
          "acronym",
          "country",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "acronym": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlaceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "acronym": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "format": "date-time"
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          },
          "blocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PlaceParams": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "term": {
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "nullable": true
          },
          "orderByProperty": {
            "type": "string",
            "nullable": true
          },
          "asc": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PlacePutDto": {
        "required": [
          "acronym",
          "country",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "acronym": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlaceResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "acronym": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestResetPasswordDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "required": [
          "email",
          "logged",
          "newPassword",
          "resetPasswordToken"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "resetPasswordToken": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "logged": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RoleDto": {
        "required": [
          "menus",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "boolean"
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleIdDto": {
        "required": [
          "menus",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "boolean"
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RoleModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "blocked": {
            "type": "boolean"
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          },
          "mobile": {
            "type": "boolean"
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleModelGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/RoleModel"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "RoleModelPageList": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleModelPageListGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/RoleModelPageList"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "RoleResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "required": [
          "email",
          "name",
          "password",
          "places",
          "roles",
          "userName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLoginDto": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "changeDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserModelGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/UserModel"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "UserPlaceDto": {
        "required": [
          "userEmail"
        ],
        "type": "object",
        "properties": {
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "placeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserPlaceModel": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/PlaceModel"
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPlaceModelGenericCommandResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/UserPlaceModel"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "$ref": "#/components/schemas/GenericCommandResultDetail"
          }
        },
        "additionalProperties": false
      },
      "UserPutDto": {
        "required": [
          "email",
          "name",
          "password",
          "places",
          "roles",
          "userName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "places": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetById"
            },
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserResult": {
        "required": [
          "location",
          "resetPasswordToken"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "resetPasswordToken": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/PlaceModel"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example authentication: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}